[project]
name = "ai-dev3"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "asyncio>=3.4.3",
    "httpx>=0.27.2",
    "markdownify>=0.13.1",
    "openai>=1.53.1",
    "parsel>=1.9.1",
    "pydantic>=2.9.2",
    "python-decouple>=3.8",
    "requests>=2.32.3",
    "termcolor>=2.5.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.0.1",
    "ruff>=0.7.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
polygon = "ai_dev3.polygon:main"
anti_captcha = "ai_dev3.anti_captcha:main"
cities = "ai_dev3.cities:task"
censorship = "ai_dev3.censorship:task"
json_report = "ai_dev3.json_report:main"
mp3 = "ai_dev3.mp3:main"
veryfi = "ai_dev3.veryfi:main"
robotid = "ai_dev3.robotid:main"
categories = "ai_dev3.categories:main"
S02E05 = "ai_dev3.S02E05.main:main"

[tool.ruff]
target-version = "py312"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true
